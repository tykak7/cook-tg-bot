import asyncio
import logging
from aiogram import F, Router, types
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import security
#from aiogram.utils.chat_action import ChatActionSender
from aiogram.enums import ParseMode, ChatAction
#from aiogram.types import InlineKeyboardMarkup
#from aiogram.utils.keyboard import InlineKeyboardBuilder

bot= Bot(token=security.TOKEN)
dp = Dispatcher()

#router = Router(name=__name__)

@dp.message(CommandStart())
async def handle_start(message: types.Message):
    url = "https://ibb.co/0JH1C6K"
    await message.answer_photo(photo=url,
                               caption=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, <b>{message.from_user.full_name}</b>!\n"
                         f"–í—ã–±–∏—Ä–∞–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ä–µ—Ü–µ–ø—Ç/–º–µ–Ω—é –∏ —Ç–≤–æ—Ä–∏!",
                               action=ChatAction.UPLOAD_PHOTO,
                               parse_mode=ParseMode.HTML)


@dp.message(Command("menu"))
async def handle_menu_command(message: types.Message):
    menu_first_btn = InlineKeyboardButton(
        text="–°–∞–º–æ–µ –±—ã—Å—Ç—Ä–æ–µ –º–µ–Ω—é", url="https://www.youtube.com/shorts/bvJN1NS7nsY")
    btn_one = InlineKeyboardButton(
        text="–°–∞–º–æ–µ –±—ã—Å—Ç—Ä–æ–µ –º–µ–Ω—é",
        url="https://www.youtube.com/shorts/bvJN1NS7nsY")
    row = [menu_first_btn]
    rowg = [btn_one]
    rows = [row, rowg]
    markup = InlineKeyboardMarkup(inline_keyboard=rows)
    await message.answer(
        text=f"–°—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–≥–∞—Ç–æ–≤–∫–∏:",
        reply_markup=markup)

@dp.message(Command("menu"))
async def handle_menu_command(message: types.Message):
    btn = InlineKeyboardButton(text="–°–∞–º–æ–µ –±—ã—Å—Ç—Ä–æ–µ –º–µ–Ω—é")
    await message.answer(text=f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ 7 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é:",
                         reply_markup=markup)

@dp.message(Command("ideas"))
async def handle_menu(message: types.Message):
    await message.answer(f"–ß—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–∞:")

@dp.message(Command("search"))
async def handle_menu(message: types.Message):
    await message.answer(f"–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç!")

@dp.message(Command("cooking_from"))
async def handle_menu(message: types.Message):
    await message.answer(f"–ß—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∏–∑...")

@dp.message(Command("digest"))
async def handle_menu(message: types.Message):
    await message.answer(f"–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–±–æ—Ä–Ω–∏–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:")

@dp.message(Command("otmena"))
async def handle_menu(message: types.Message):
    await message.answer(f"–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üîΩ")

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
